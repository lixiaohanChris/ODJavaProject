<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/aop 
            			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
						
				 	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.od.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- aop -->
 	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--  配置AOP 
    <aop:config>
        配置切点表达式 
        <aop:pointcut id="pointcut" expression="execution(!void com.od.controller.*.*(..))" />
        配置切面及配置
        <aop:aspect order="3" ref="validationAspect">
            前置通知
            <aop:before method="beforMethod" pointcut-ref="pointcut"/>
            后置通知
            <aop:after method="afterMethod" pointcut-ref="pointcut"/>
            返回通知
            <aop:after-returning method="afterReturnMethod" pointcut-ref="pointcut" returning="result"/>
            异常通知
            <aop:after-throwing method="afterThrowingMethod" pointcut-ref="pointcut" throwing="ex"/>
        </aop:aspect>
    </aop:config> -->
	
	<!-- 基于注解驱动的SpringMVC -->
	<mvc:annotation-driven />
	
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 解决Tomcat无法访问css和js等静态资源问题 -->
	<mvc:default-servlet-handler/>
 	
 	<!-- 文件上传 -->
 	<bean id="multipartResolver"
 		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 	</bean>
 	
	<!-- 使用annotation定义事务 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>